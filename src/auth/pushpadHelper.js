import fetch from 'isomorphic-fetch';

export const initPushpad = (username, token) => {
  const PUSHPAD_PROJECT_ID = process.env.PUSHPAD_PROJECT_ID;
  const BUSYPUSH_ENDPOINT = process.env.BUSYPUSH_ENDPOINT;

  if (!(window && window.Worker)) { // eslint-disable-line
    return;
  }

  // code is generated by pushpad
  /* eslint-disable */
  (function(p,u,s,h,x) {
    p.pushpad = p.pushpad || function() {
      (p.pushpad.q = p.pushpad.q || []).push(arguments)
    };
    h = u.getElementsByTagName('head')[0];
    x = u.createElement('script');
    x.async = 1;
    x.src = s;
    h.appendChild(x);
  })(window,document, 'https://pushpad.xyz/pushpad.js');

  pushpad('init', PUSHPAD_PROJECT_ID);
  pushpad('status', (isSubscribed) => {
    if (isSubscribed) {
      return;
    }

    fetch(`${BUSYPUSH_ENDPOINT}/api/getSignature`, {
      method: 'POST',
      headers: {
        'Accept': 'application/json, text/plain, */*',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        username,
        token,
      }),
    })
      .then(jsonRes => jsonRes.json())
      .then((res) => {
        if (!(res && res.isValid)) {
          return;
        }

        const { signatureId } = res;
        
        pushpad('uid', `${username}`, signatureId);
        pushpad('subscribe', (isSubscribed) => {
          if (!isSubscribed) {
            return;
          }

          // subscribe username in busy-push to check for its activities in Steem blockchain
          fetch(`${BUSYPUSH_ENDPOINT}/api/subscribe`, {
            method: 'POST',
            headers: {
              'Accept': 'application/json, text/plain, */*',
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              username,
              token,
            }),
          })
        });
        /* eslint-enable */
      }).catch((err) => {
        console.log(err);
      });
  });

  
}
